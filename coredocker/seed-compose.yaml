# meant to be used with traefik/authelia docker-compose.yaml as base
services:
  wireguard:
    container_name: wireguard
    image: lscr.io/linuxserver/wireguard:1.0.20210914
    restart: unless-stopped
    environment:
      - TZ=Europe/Stockholm
      - PUID=1000
      - PGID=1000
    volumes:
      - ./data/wireguard/wg0.conf:/config/wg0.conf
      - /lib/modules:/lib/modules
    expose:
      - 9091 #transmission
      - 9696 #prowlarr
      - 8989 #sonarr
      - 7878 #radarr
    networks:
      default:
        aliases:
        - wireguard
        - transmission
        - jackett
        - sonarr
        - radarr
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=0
    labels:
      - "traefik.enable=true"
      # transmission endpoint
      - "traefik.http.routers.transmission.entrypoints=websecure"
      - "traefik.http.routers.transmission.rule=Host(`transmission.${DOMAIN}`)"
      - "traefik.http.routers.transmission.service=transmission"
      - 'traefik.http.routers.transmission.middlewares=authelia@docker'
      - "traefik.http.services.transmission.loadbalancer.server.scheme=http"
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"
       # prowlarr endpoint
      - "traefik.http.routers.prowlarr.entrypoints=websecure"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.${DOMAIN}`)"
      - "traefik.http.routers.prowlarr.service=prowlarr"
      - "traefik.http.routers.prowlarr.middlewares=authelia@docker"
      - "traefik.http.services.prowlarr.loadbalancer.server.scheme=http"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
      # sonarr endpoint
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)"
      - "traefik.http.routers.sonarr.service=sonarr"
      - 'traefik.http.routers.sonarr.middlewares=authelia@docker'
      - "traefik.http.services.sonarr.loadbalancer.server.scheme=http"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      # radarr endpoint
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)"
      - "traefik.http.routers.radarr.service=radarr"
      - 'traefik.http.routers.radarr.middlewares=authelia@docker'
      - "traefik.http.services.radarr.loadbalancer.server.scheme=http"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"

  # https://hub.docker.com/r/linuxserver/transmission
  transmission:
    image: lscr.io/linuxserver/transmission:4.0.5
    container_name: transmission
    restart: unless-stopped
    depends_on: [ "wireguard" ]
    environment:
      - TZ=Europe/Stockholm
      - PUID=1000
      - PGID=1000
      #- TRANSMISSION_WEB_HOME=/combustion-release/
    volumes:
      - ./data/transmission/config:/config
      - /mnt/nfs/download:/downloads
    network_mode: "service:wireguard"

  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:1.10.5.4116-ls43
    restart: unless-stopped
    depends_on: [ "wireguard" ]
    environment:
      - TZ=Europe/Stockholm
      - PUID=1000
      - PGID=1000
    volumes:
      - ./data/prowlarr:/config
    network_mode: "service:wireguard"

  # https://hub.docker.com/r/linuxserver/sonarr
  sonarr:
    container_name: sonarr
    image: lscr.io/linuxserver/sonarr:3.0.10
    restart: unless-stopped
    depends_on: [ "wireguard" ]
    environment:
      - TZ=Europe/Stockholm
      - PUID=1000
      - PGID=1000
    volumes:
      - ./data/sonarr:/config
      - /mnt/nfs/tv:/tv 
      - /mnt/nfs/download:/downloads 
    network_mode: "service:wireguard"

  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:5.1.3
    restart: unless-stopped
    depends_on: [ "wireguard" ]
    environment:
      - TZ=Europe/London
      - PUID=1000
      - PGID=1000
    volumes:
      - ./data/radarr:/config
      - /mnt/nfs/movies:/movies
      - /mnt/nfs/download:/downloads
    network_mode: "service:wireguard"

  plex:
    container_name: plex
    image: lscr.io/linuxserver/plex:1.32.7
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
    volumes:
      - ./data/plex:/config
      - /mnt/nfs/tv:/tv
      - /mnt/nfs/movies:/movies
      - /mnt/ramdisk:/ramdisk
    network_mode: host
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex.entrypoints=websecure"
      - "traefik.http.routers.plex.rule=Host(`plex.${DOMAIN}`)"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"

  archivebox:
    container_name: archivebox
    image: archivebox/archivebox:0.7
    command: server --quick-init 0.0.0.0:8000
    volumes:
      - ./data/archivebox:/data
    environment:
      - ALLOWED_HOSTS=*
      - PUID=1000
      - PGID=1000
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.archivebox.entrypoints=websecure"
      - "traefik.http.routers.archivebox.rule=Host(`archivebox.${DOMAIN}`)"
      - "traefik.http.services.archivebox.loadbalancer.server.port=8000"
